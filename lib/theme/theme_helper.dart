import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.gray50,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(4.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.blueGray100,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.blueGray100,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray80001,
          fontSize: 18.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray400,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray40001,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 24.fSize,
          fontFamily: 'Euclid Circular A',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray90002.withOpacity(0.53),
          fontSize: 12.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.gray500,
          fontSize: 10.fSize,
          fontFamily: 'Plus Jakarta Sans',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: colorScheme.onPrimary.withOpacity(1),
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF2837A3),
    primaryContainer: Color(0XFFCCCCCC),

    // Error colors
    errorContainer: Color(0XFF7F3E3B),
    onError: Color(0XFF263238),

    // On colors(text colors)
    onPrimary: Color(0XA2FFFFFF),
    onPrimaryContainer: Color(0XFF292B33),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue50 => Color(0XFFDEE9FF);
  Color get blue500 => Color(0XFF3497F9);

  // BlueGray
  Color get blueGray100 => Color(0XFFCCCDCE);
  Color get blueGray300 => Color(0XFF9EA2B3);
  Color get blueGray400 => Color(0XFF838799);
  Color get blueGray40001 => Color(0XFF8E8E93);
  Color get blueGray50 => Color(0XFFE7EAEE);
  Color get blueGray500 => Color(0XFF64748B);
  Color get blueGray5001 => Color(0XFFF1F1F1);
  Color get blueGray700 => Color(0XFF4B5563);
  Color get blueGray800 => Color(0XFF2D3657);
  Color get blueGray900 => Color(0XFF2E3045);
  Color get blueGray90001 => Color(0XFF2A2D34);
  Color get blueGray90002 => Color(0XFF333333);

  // Gray
  Color get gray200 => Color(0XFFECECEC);
  Color get gray20001 => Color(0XFFE5E7EB);
  Color get gray20002 => Color(0XFFEBEBEB);
  Color get gray20003 => Color(0XFFEFEFEF);
  Color get gray20004 => Color(0XFFEAEAEA);
  Color get gray300 => Color(0XFFE0E0E0);
  Color get gray30001 => Color(0XFFE2E2E2);
  Color get gray30002 => Color(0XFFDDDDDD);
  Color get gray50 => Color(0XFFFBFBFB);
  Color get gray500 => Color(0XFFABABAB);
  Color get gray50001 => Color(0XFF9E9E9E);
  Color get gray50002 => Color(0XFF999999);
  Color get gray5001 => Color(0XFFF5F8FF);
  Color get gray600 => Color(0XFF808080);
  Color get gray60001 => Color(0XFF6A6C71);
  Color get gray60002 => Color(0XFF6F6F6F);
  Color get gray60003 => Color(0XFF887F7F);
  Color get gray800 => Color(0XFF3C3C43);
  Color get gray80001 => Color(0XFF4E4E4E);
  Color get gray900 => Color(0XFF191D23);
  Color get gray90001 => Color(0XFF141519);
  Color get gray90002 => Color(0XFF0A141E);
  Color get gray90003 => Color(0XFF0A151E);
  Color get gray90004 => Color(0XFF0D1336);
  Color get gray90005 => Color(0XFF121212);

  // Green
  Color get green400 => Color(0XFF60BB58);

  // Indigo
  Color get indigo100 => Color(0XFFC0C7FF);
  Color get indigo800 => Color(0XFF1F3D8A);

  // LightGreen
  Color get lightGreen800 => Color(0XFF44AC21);

  // Pink
  Color get pink800 => Color(0XFF9B2B42);

  // Red
  Color get red500 => Color(0XFFFF382E);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
